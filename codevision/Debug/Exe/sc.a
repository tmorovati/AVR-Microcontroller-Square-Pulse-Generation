;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 7/21/2020
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 1.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;// Declare your global variables here
;
;void main(void)
; 0000 001E {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 001F 
; 0000 0020 
; 0000 0021 // Port D initialization
; 0000 0022 // Function: Bit7=In Bit6=In Bit5=Out Bit4=Out Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0023 DDRD=(0<<DDD7) | (0<<DDD6) | (1<<DDD5) | (1<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0024 // State: Bit7=T Bit6=T Bit5=0 Bit4=0 Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0025 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0026 
; 0000 0027 
; 0000 0028 
; 0000 0029 
; 0000 002A 
; 0000 002B while (1)
;PCODE: $00000012 VOL: 0
; 0000 002C       {
; 0000 002D       TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (1<<WGM01) | (0<<CS02) | (0<<CS01) | (1<<CS00); //enable timer
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 002E       TCNT0=0x00;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002F       OCR0=0x32 ;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0030       while((TIFR  & ( 1 << OCF0 )) == 0 );//polling
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0031       TCCR0 = 0 ;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0032       PORTD = PORTD ^ 0x10 ; //PD4
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0033       delay_us(100) ;
;PCODE: $00000026 VOL: 0
; 0000 0034       PORTD = PORTD ^ 0x20 ; //PD5
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0035       TCNT0 = 0 ;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0036       TIFR = ( 1 << OCF0 ) ; //clear flag
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0037 
; 0000 0038       }
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0039 }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
